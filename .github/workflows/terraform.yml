name: terraform plan / apply

on:
  workflow_dispatch:
    inputs:
      SSH_PRIVATE_KEY:
        description: 'The GitHub secret containing the private key of the SSH key named in the preceding input variable `SSH_PRIVATE_KEY` is used for SSH login purposes on nginx node.'
        required: true
      TERRAFORM_APPLY:
        description: 'Terraform apply'
        required: false
        type: boolean
        default: false

env:
  # TF_LOG_PATH: ./temp/terraform.log
  ## TRACE, DEBUG, INFO, WARN or ERROR
  # TF_LOG: TRACE
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TF_VAR_SSH_PRIVATE_KEY: ${{ secrets[inputs.SSH_PRIVATE_KEY] }}

jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        # We keep Terraform files in the terraform directory.
        working-directory: 'terraform/aws'
    steps:
      - uses: actions/checkout@v4

      - name: Setup Terraform with specified version on the runner
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: v1.8.5

      #- name: Create terraform log file
      #  run: |
      #    rm -rf ${{env.TF_LOG_PATH}}
      #    mkdir -p "$(dirname ${{env.TF_LOG_PATH}} )" && touch "${{env.TF_LOG_PATH}}"

      - name: Terraform fmt
        run: terraform fmt -recursive

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate -no-color

      - name: Terraform Plan
        run: terraform plan -input=false -var-file="./env.tfvars" -out ./tf-plan -no-color

      - name: Terraform Apply
        run: terraform apply -input=false -var-file="./env.tfvars" -no-color -auto-approve
        if: "${{ inputs.TERRAFORM_APPLY  == true }}"

      - name: Add the Terraform plan file / *.tfstate files / terraform format changes
        run: |
          git add -A
          git status
          git config --global user.email ${{ github.actor }}@users.noreply.github.com
          git config --global user.name ${{ github.actor }}
          git commit -s -am "Terraform files GitHub Actions"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,author,commit,workflow,job # selectable (default: repo,message)
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
        if: "${{ github.event_name != 'pull_request' && failure() }}" # Pick up events even if the job fails or is canceled.
