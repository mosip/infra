name: Generate PostgreSQL Secrets

on:
  workflow_dispatch:
    inputs:
      postgres_deployment_type:
        description: "PostgreSQL deployment type"
        required: true
        default: "container"
        type: choice
        options:
          - container
          - external-node

jobs:
  generate-secrets:
    runs-on: ubuntu-latest
    environment: 
      name: ${{ github.ref_name }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check PostgreSQL deployment type
        run: |
          if [[ "${{ github.event.inputs.postgres_deployment_type }}" == "container" ]]; then
            echo "🐳 PostgreSQL is deployed as a container - no secrets generation needed"
            echo "✅ Skipping secret generation for containerized PostgreSQL"
            echo "💡 Container deployments handle secrets internally"
            exit 0
          else
            echo "🏗️ PostgreSQL is deployed on external node - proceeding with secret generation"
            echo "🔐 External PostgreSQL requires manual secret management"
          fi

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Setup kubectl (for external-node deployment)
        if: github.event.inputs.postgres_deployment_type == 'external-node'
        uses: azure/setup-kubectl@v4
        with:
          version: 'v1.29.0'

      - name: Configure Kubernetes access (for external-node deployment)
        if: github.event.inputs.postgres_deployment_type == 'external-node'
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config
          chmod 600 ~/.kube/config

      - name: Generate and Apply PostgreSQL Secrets
        if: github.event.inputs.postgres_deployment_type == 'external-node'
        run: |
          chmod +x ./.github/scripts/generate-pg-secrets.sh
          ./.github/scripts/generate-pg-secrets.sh ${{ github.workspace }}/generated-secrets ${{ github.ref_name }} --apply
        env:
          DB_PASSWORD: ${{ secrets.DB_COMMON_PASSWORD }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
