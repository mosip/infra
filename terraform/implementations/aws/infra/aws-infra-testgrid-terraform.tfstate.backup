{
  "version": 4,
  "terraform_version": "1.8.5",
  "serial": 247,
  "lineage": "7960d3eb-9813-e008-63eb-6318de8f78c0",
  "outputs": {
    "cluster_info": {
      "value": {
        "cloud_provider": "aws",
        "cluster_env_domain": "testgrids.mosip.net",
        "cluster_name": "test"
      },
      "type": [
        "object",
        {
          "cloud_provider": "string",
          "cluster_env_domain": "string",
          "cluster_name": "string"
        }
      ]
    },
    "control_plane_node_1": {
      "value": "10.0.3.199",
      "type": "string"
    },
    "deployment_summary": {
      "value": {
        "control_plane_nodes": {
          "test-CONTROL-PLANE-NODE-1": "10.0.3.199"
        },
        "deployment_method": "Cloud-Init (SSH-free deployment)",
        "kubeconfig_location": "Files will be downloaded to the terraform apply directory: /home/runner/work/infra/infra/terraform/implementations/aws/infra/",
        "kubectl_usage_example": "After deployment: cd /home/runner/work/infra/infra/terraform/implementations/aws/infra \u0026\u0026 ./kubectl --kubeconfig=\u003ccontrol-plane-node-name\u003e.yaml get nodes"
      },
      "type": [
        "object",
        {
          "control_plane_nodes": [
            "map",
            "string"
          ],
          "deployment_method": "string",
          "kubeconfig_location": "string",
          "kubectl_usage_example": "string"
        }
      ]
    },
    "k8s_cluster_private_ips": {
      "value": {
        "test-CONTROL-PLANE-NODE-1": "10.0.3.199"
      },
      "type": [
        "map",
        "string"
      ]
    },
    "k8s_cluster_public_ips": {
      "value": {
        "test-CONTROL-PLANE-NODE-1": ""
      },
      "type": [
        "map",
        "string"
      ]
    },
    "k8s_token": {
      "value": "yGit9DEePGCR5PB9359MxV5QppKoUcLU",
      "type": "string",
      "sensitive": true
    },
    "nginx_private_ip": {
      "value": "10.0.2.231",
      "type": "string"
    },
    "nginx_public_ip": {
      "value": "13.201.18.209",
      "type": "string"
    },
    "rke2_deployment_info": {
      "value": {
        "cloud_init_user_data": {
          "test-CONTROL-PLANE-NODE-1": ""
        },
        "control_plane_nodes": {
          "test-CONTROL-PLANE-NODE-1": "10.0.3.199"
        },
        "deployment_method": "Cloud-Init (SSH-free deployment)",
        "kubeconfig_files_location": "Files will be downloaded to the terraform apply directory: /home/runner/work/infra/infra/terraform/implementations/aws/infra/",
        "kubectl_usage": "After deployment: cd /home/runner/work/infra/infra/terraform/implementations/aws/infra \u0026\u0026 ./kubectl --kubeconfig=\u003ccontrol-plane-node-name\u003e.yaml get nodes",
        "setup_instructions": "Cloud-Init enabled: Add the user_data from 'rke2_cloud_init_user_data' output to your EC2 instances."
      },
      "type": [
        "object",
        {
          "cloud_init_user_data": [
            "map",
            "string"
          ],
          "control_plane_nodes": [
            "map",
            "string"
          ],
          "deployment_method": "string",
          "kubeconfig_files_location": "string",
          "kubectl_usage": "string",
          "setup_instructions": "string"
        }
      ]
    },
    "vpc_id": {
      "value": "vpc-034f89e7c01cabf74",
      "type": "string"
    }
  },
  "resources": [
    {
      "module": "module.mosip_infra.module.aws_infra[0].module.aws_infrastructure",
      "mode": "data",
      "type": "aws_availability_zones",
      "name": "available",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "all_availability_zones": null,
            "exclude_names": null,
            "exclude_zone_ids": null,
            "filter": null,
            "group_names": [
              "ap-south-1-zg-1"
            ],
            "id": "ap-south-1",
            "names": [
              "ap-south-1a",
              "ap-south-1b",
              "ap-south-1c"
            ],
            "state": "available",
            "timeouts": null,
            "zone_ids": [
              "aps1-az1",
              "aps1-az3",
              "aps1-az2"
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.mosip_infra.module.aws_infra[0].module.aws_infrastructure",
      "mode": "data",
      "type": "aws_ec2_instance_type_offerings",
      "name": "k8s_instance_types",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "ap-south-1a",
          "schema_version": 0,
          "attributes": {
            "filter": [
              {
                "name": "instance-type",
                "values": [
                  "t3a.2xlarge"
                ]
              },
              {
                "name": "location",
                "values": [
                  "ap-south-1a"
                ]
              }
            ],
            "id": "ap-south-1",
            "instance_types": [
              "t3a.2xlarge"
            ],
            "location_type": "availability-zone",
            "location_types": [
              "availability-zone"
            ],
            "locations": [
              "ap-south-1a"
            ],
            "timeouts": null
          },
          "sensitive_attributes": []
        },
        {
          "index_key": "ap-south-1b",
          "schema_version": 0,
          "attributes": {
            "filter": [
              {
                "name": "instance-type",
                "values": [
                  "t3a.2xlarge"
                ]
              },
              {
                "name": "location",
                "values": [
                  "ap-south-1b"
                ]
              }
            ],
            "id": "ap-south-1",
            "instance_types": [
              "t3a.2xlarge"
            ],
            "location_type": "availability-zone",
            "location_types": [
              "availability-zone"
            ],
            "locations": [
              "ap-south-1b"
            ],
            "timeouts": null
          },
          "sensitive_attributes": []
        },
        {
          "index_key": "ap-south-1c",
          "schema_version": 0,
          "attributes": {
            "filter": [
              {
                "name": "instance-type",
                "values": [
                  "t3a.2xlarge"
                ]
              },
              {
                "name": "location",
                "values": [
                  "ap-south-1c"
                ]
              }
            ],
            "id": "ap-south-1",
            "instance_types": [
              "t3a.2xlarge"
            ],
            "location_type": "availability-zone",
            "location_types": [
              "availability-zone"
            ],
            "locations": [
              "ap-south-1c"
            ],
            "timeouts": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.mosip_infra.module.aws_infra[0].module.aws_infrastructure",
      "mode": "data",
      "type": "aws_ec2_instance_type_offerings",
      "name": "nginx_instance_types",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "ap-south-1a",
          "schema_version": 0,
          "attributes": {
            "filter": [
              {
                "name": "instance-type",
                "values": [
                  "t3a.2xlarge"
                ]
              },
              {
                "name": "location",
                "values": [
                  "ap-south-1a"
                ]
              }
            ],
            "id": "ap-south-1",
            "instance_types": [
              "t3a.2xlarge"
            ],
            "location_type": "availability-zone",
            "location_types": [
              "availability-zone"
            ],
            "locations": [
              "ap-south-1a"
            ],
            "timeouts": null
          },
          "sensitive_attributes": []
        },
        {
          "index_key": "ap-south-1b",
          "schema_version": 0,
          "attributes": {
            "filter": [
              {
                "name": "instance-type",
                "values": [
                  "t3a.2xlarge"
                ]
              },
              {
                "name": "location",
                "values": [
                  "ap-south-1b"
                ]
              }
            ],
            "id": "ap-south-1",
            "instance_types": [
              "t3a.2xlarge"
            ],
            "location_type": "availability-zone",
            "location_types": [
              "availability-zone"
            ],
            "locations": [
              "ap-south-1b"
            ],
            "timeouts": null
          },
          "sensitive_attributes": []
        },
        {
          "index_key": "ap-south-1c",
          "schema_version": 0,
          "attributes": {
            "filter": [
              {
                "name": "instance-type",
                "values": [
                  "t3a.2xlarge"
                ]
              },
              {
                "name": "location",
                "values": [
                  "ap-south-1c"
                ]
              }
            ],
            "id": "ap-south-1",
            "instance_types": [
              "t3a.2xlarge"
            ],
            "location_type": "availability-zone",
            "location_types": [
              "availability-zone"
            ],
            "locations": [
              "ap-south-1c"
            ],
            "timeouts": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.mosip_infra.module.aws_infra[0].module.aws_infrastructure",
      "mode": "data",
      "type": "aws_subnets",
      "name": "private_subnets",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filter": [
              {
                "name": "availability-zone",
                "values": [
                  "ap-south-1a",
                  "ap-south-1b",
                  "ap-south-1c"
                ]
              },
              {
                "name": "vpc-id",
                "values": [
                  "vpc-034f89e7c01cabf74"
                ]
              }
            ],
            "id": "ap-south-1",
            "ids": [
              "subnet-0cb3018e6136c52ec",
              "subnet-0ef4971136b7c1faa"
            ],
            "tags": {
              "Type": "Private"
            },
            "timeouts": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.mosip_infra.module.aws_infra[0].module.aws_infrastructure",
      "mode": "data",
      "type": "aws_subnets",
      "name": "public_subnets",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filter": [
              {
                "name": "availability-zone",
                "values": [
                  "ap-south-1a",
                  "ap-south-1b",
                  "ap-south-1c"
                ]
              },
              {
                "name": "vpc-id",
                "values": [
                  "vpc-034f89e7c01cabf74"
                ]
              }
            ],
            "id": "ap-south-1",
            "ids": [
              "subnet-0b8d2671904225d00",
              "subnet-0d12cf6c8ad0833e5"
            ],
            "tags": {
              "Type": "Public"
            },
            "timeouts": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.mosip_infra.module.aws_infra[0].module.aws_infrastructure",
      "mode": "data",
      "type": "aws_vpc",
      "name": "existing_vpc",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:ap-south-1:931337674770:vpc/vpc-034f89e7c01cabf74",
            "cidr_block": "10.0.0.0/16",
            "cidr_block_associations": [
              {
                "association_id": "vpc-cidr-assoc-0c2e3de859e49b3e9",
                "cidr_block": "10.0.0.0/16",
                "state": "associated"
              }
            ],
            "default": false,
            "dhcp_options_id": "dopt-d617d0bd",
            "enable_dns_hostnames": true,
            "enable_dns_support": true,
            "enable_network_address_usage_metrics": false,
            "filter": null,
            "id": "vpc-034f89e7c01cabf74",
            "instance_tenancy": "default",
            "ipv6_association_id": "",
            "ipv6_cidr_block": "",
            "main_route_table_id": "rtb-020c02c5fb2fd4f86",
            "owner_id": "931337674770",
            "state": null,
            "tags": {
              "Environment": "dev",
              "Name": "mosip-boxes",
              "Project": "mosip"
            },
            "timeouts": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.mosip_infra.module.aws_infra[0].module.aws_infrastructure",
      "mode": "managed",
      "type": "null_resource",
      "name": "instance_type_validation",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "2860700040988689138",
            "triggers": {
              "common_azs": "3",
              "k8s_available_azs": "3",
              "k8s_instance_type": "t3a.2xlarge",
              "min_azs_needed": "1",
              "nginx_available_azs": "3",
              "nginx_instance_type": "t3a.2xlarge",
              "total_k8s_nodes": "1"
            }
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_availability_zones.available",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_ec2_instance_type_offerings.k8s_instance_types",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_ec2_instance_type_offerings.nginx_instance_types"
          ]
        }
      ]
    },
    {
      "module": "module.mosip_infra.module.aws_infra[0].module.aws_infrastructure.module.aws-resource-creation",
      "mode": "managed",
      "type": "aws_iam_instance_profile",
      "name": "certbot_profile",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::931337674770:instance-profile/test-certbot-instance-profile",
            "create_date": "2025-08-26T20:45:46Z",
            "id": "test-certbot-instance-profile",
            "name": "test-certbot-instance-profile",
            "name_prefix": "",
            "path": "/",
            "role": "test-certbot-route53-role",
            "tags": {},
            "tags_all": {},
            "unique_id": "AIPA5RWANEAJLYFXH3UNV"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_role.certbot_role"
          ]
        }
      ]
    },
    {
      "module": "module.mosip_infra.module.aws_infra[0].module.aws_infrastructure.module.aws-resource-creation",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "certbot_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::931337674770:policy/test-certbot-route53-policy",
            "attachment_count": 1,
            "description": "Allow Certbot to modify Route 53 records",
            "id": "arn:aws:iam::931337674770:policy/test-certbot-route53-policy",
            "name": "test-certbot-route53-policy",
            "name_prefix": "",
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":[\"route53:ListHostedZones\",\"route53:GetChange\",\"route53:ChangeResourceRecordSets\"],\"Effect\":\"Allow\",\"Resource\":\"*\"}],\"Version\":\"2012-10-17\"}",
            "policy_id": "ANPA5RWANEAJI77QDBAPB",
            "tags": {
              "Cluster": "test",
              "Name": "test-certbot-route53-policy"
            },
            "tags_all": {
              "Cluster": "test",
              "Name": "test-certbot-route53-policy"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.mosip_infra.module.aws_infra[0].module.aws_infrastructure.module.aws-resource-creation",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "certbot_role",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::931337674770:role/test-certbot-route53-role",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}",
            "create_date": "2025-08-26T20:45:46Z",
            "description": "",
            "force_detach_policies": false,
            "id": "test-certbot-route53-role",
            "inline_policy": [],
            "managed_policy_arns": [
              "arn:aws:iam::931337674770:policy/test-certbot-route53-policy"
            ],
            "max_session_duration": 3600,
            "name": "test-certbot-route53-role",
            "name_prefix": "",
            "path": "/",
            "permissions_boundary": "",
            "tags": {
              "Cluster": "test",
              "Name": "test-certbot-route53-role"
            },
            "tags_all": {
              "Cluster": "test",
              "Name": "test-certbot-route53-role"
            },
            "unique_id": "AROA5RWANEAJN74NRON27"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.mosip_infra.module.aws_infra[0].module.aws_infrastructure.module.aws-resource-creation",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "certbot_policy_attachment",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "test-certbot-route53-role-20250826204546912200000005",
            "policy_arn": "arn:aws:iam::931337674770:policy/test-certbot-route53-policy",
            "role": "test-certbot-route53-role"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_policy.certbot_policy",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_role.certbot_role"
          ]
        }
      ]
    },
    {
      "module": "module.mosip_infra.module.aws_infra[0].module.aws_infrastructure.module.aws-resource-creation",
      "mode": "managed",
      "type": "aws_instance",
      "name": "K8S_CLUSTER_EC2_INSTANCE",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "CONTROL-PLANE-NODE-1",
          "schema_version": 1,
          "attributes": {
            "ami": "ami-0ad21ae1d0696ad58",
            "arn": "arn:aws:ec2:ap-south-1:931337674770:instance/i-07740b8dfe08fa335",
            "associate_public_ip_address": false,
            "availability_zone": "ap-south-1a",
            "capacity_reservation_specification": [
              {
                "capacity_reservation_preference": "open",
                "capacity_reservation_target": []
              }
            ],
            "cpu_core_count": 4,
            "cpu_options": [
              {
                "amd_sev_snp": "",
                "core_count": 4,
                "threads_per_core": 2
              }
            ],
            "cpu_threads_per_core": 2,
            "credit_specification": [
              {
                "cpu_credits": "unlimited"
              }
            ],
            "disable_api_stop": false,
            "disable_api_termination": false,
            "ebs_block_device": [],
            "ebs_optimized": false,
            "enclave_options": [
              {
                "enabled": false
              }
            ],
            "ephemeral_block_device": [],
            "get_password_data": false,
            "hibernation": false,
            "host_id": "",
            "host_resource_group_arn": null,
            "iam_instance_profile": "",
            "id": "i-07740b8dfe08fa335",
            "instance_initiated_shutdown_behavior": "stop",
            "instance_lifecycle": "",
            "instance_market_options": [],
            "instance_state": "running",
            "instance_type": "t3a.2xlarge",
            "ipv6_address_count": 0,
            "ipv6_addresses": [],
            "key_name": "mosip-aws",
            "launch_template": [],
            "maintenance_options": [
              {
                "auto_recovery": "default"
              }
            ],
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_protocol_ipv6": "disabled",
                "http_put_response_hop_limit": 2,
                "http_tokens": "required",
                "instance_metadata_tags": "disabled"
              }
            ],
            "monitoring": false,
            "network_interface": [],
            "outpost_arn": "",
            "password_data": "",
            "placement_group": "",
            "placement_partition_number": 0,
            "primary_network_interface_id": "eni-089456f030c2e2d78",
            "private_dns": "ip-10-0-3-199.ap-south-1.compute.internal",
            "private_dns_name_options": [
              {
                "enable_resource_name_dns_a_record": false,
                "enable_resource_name_dns_aaaa_record": false,
                "hostname_type": "ip-name"
              }
            ],
            "private_ip": "10.0.3.199",
            "public_dns": "",
            "public_ip": "",
            "root_block_device": [
              {
                "delete_on_termination": true,
                "device_name": "/dev/sda1",
                "encrypted": false,
                "iops": 3000,
                "kms_key_id": "",
                "tags": {
                  "Cluster": "test",
                  "Component": "test",
                  "Name": "test-CONTROL-PLANE-NODE-1"
                },
                "tags_all": {
                  "Cluster": "test",
                  "Component": "test",
                  "Name": "test-CONTROL-PLANE-NODE-1"
                },
                "throughput": 125,
                "volume_id": "vol-0331c6b970f995665",
                "volume_size": 64,
                "volume_type": "gp3"
              }
            ],
            "secondary_private_ips": [],
            "security_groups": [],
            "source_dest_check": true,
            "spot_instance_request_id": "",
            "subnet_id": "subnet-0cb3018e6136c52ec",
            "tags": {
              "Cluster": "test",
              "Component": "test",
              "Name": "test-CONTROL-PLANE-NODE-1"
            },
            "tags_all": {
              "Cluster": "test",
              "Component": "test",
              "Name": "test-CONTROL-PLANE-NODE-1"
            },
            "tenancy": "default",
            "timeouts": null,
            "user_data": "e1b37ec50dbeaf599ae72696b10cde8f13247a70",
            "user_data_base64": null,
            "user_data_replace_on_change": false,
            "volume_tags": null,
            "vpc_security_group_ids": [
              "sg-0993d87bdd91f5cfe"
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMCwicmVhZCI6OTAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_availability_zones.available",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_ec2_instance_type_offerings.k8s_instance_types",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_ec2_instance_type_offerings.nginx_instance_types",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_subnets.private_subnets",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_vpc.existing_vpc",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_security_group.security-group"
          ]
        }
      ]
    },
    {
      "module": "module.mosip_infra.module.aws_infra[0].module.aws_infrastructure.module.aws-resource-creation",
      "mode": "managed",
      "type": "aws_instance",
      "name": "NGINX_EC2_INSTANCE",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "ami": "ami-0ad21ae1d0696ad58",
            "arn": "arn:aws:ec2:ap-south-1:931337674770:instance/i-0e0befa9d0377d848",
            "associate_public_ip_address": true,
            "availability_zone": "ap-south-1b",
            "capacity_reservation_specification": [
              {
                "capacity_reservation_preference": "open",
                "capacity_reservation_target": []
              }
            ],
            "cpu_core_count": 4,
            "cpu_options": [
              {
                "amd_sev_snp": "",
                "core_count": 4,
                "threads_per_core": 2
              }
            ],
            "cpu_threads_per_core": 2,
            "credit_specification": [
              {
                "cpu_credits": "unlimited"
              }
            ],
            "disable_api_stop": false,
            "disable_api_termination": false,
            "ebs_block_device": [
              {
                "delete_on_termination": true,
                "device_name": "/dev/sdb",
                "encrypted": false,
                "iops": 3000,
                "kms_key_id": "",
                "snapshot_id": "",
                "tags": {
                  "Cluster": "test",
                  "Component": "test",
                  "Name": "test-NGINX-NODE-vol1"
                },
                "tags_all": {
                  "Cluster": "test",
                  "Component": "test",
                  "Name": "test-NGINX-NODE-vol1"
                },
                "throughput": 125,
                "volume_id": "vol-080328116bea6c12e",
                "volume_size": 300,
                "volume_type": "gp3"
              },
              {
                "delete_on_termination": true,
                "device_name": "/dev/sdc",
                "encrypted": false,
                "iops": 3000,
                "kms_key_id": "",
                "snapshot_id": "",
                "tags": {
                  "Cluster": "test",
                  "Component": "test",
                  "Name": "test-NGINX-NODE-vol2"
                },
                "tags_all": {
                  "Cluster": "test",
                  "Component": "test",
                  "Name": "test-NGINX-NODE-vol2"
                },
                "throughput": 125,
                "volume_id": "vol-02a22b60beb61b084",
                "volume_size": 200,
                "volume_type": "gp3"
              }
            ],
            "ebs_optimized": false,
            "enclave_options": [
              {
                "enabled": false
              }
            ],
            "ephemeral_block_device": [],
            "get_password_data": false,
            "hibernation": false,
            "host_id": "",
            "host_resource_group_arn": null,
            "iam_instance_profile": "test-certbot-instance-profile",
            "id": "i-0e0befa9d0377d848",
            "instance_initiated_shutdown_behavior": "stop",
            "instance_lifecycle": "",
            "instance_market_options": [],
            "instance_state": "running",
            "instance_type": "t3a.2xlarge",
            "ipv6_address_count": 0,
            "ipv6_addresses": [],
            "key_name": "mosip-aws",
            "launch_template": [],
            "maintenance_options": [
              {
                "auto_recovery": "default"
              }
            ],
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_protocol_ipv6": "disabled",
                "http_put_response_hop_limit": 2,
                "http_tokens": "required",
                "instance_metadata_tags": "disabled"
              }
            ],
            "monitoring": false,
            "network_interface": [],
            "outpost_arn": "",
            "password_data": "",
            "placement_group": "",
            "placement_partition_number": 0,
            "primary_network_interface_id": "eni-02090f7e697fa45de",
            "private_dns": "ip-10-0-2-231.ap-south-1.compute.internal",
            "private_dns_name_options": [
              {
                "enable_resource_name_dns_a_record": false,
                "enable_resource_name_dns_aaaa_record": false,
                "hostname_type": "ip-name"
              }
            ],
            "private_ip": "10.0.2.231",
            "public_dns": "ec2-13-201-18-209.ap-south-1.compute.amazonaws.com",
            "public_ip": "13.201.18.209",
            "root_block_device": [
              {
                "delete_on_termination": true,
                "device_name": "/dev/sda1",
                "encrypted": false,
                "iops": 3000,
                "kms_key_id": "",
                "tags": {
                  "Cluster": "test",
                  "Component": "test",
                  "Name": "test-NGINX-NODE"
                },
                "tags_all": {
                  "Cluster": "test",
                  "Component": "test",
                  "Name": "test-NGINX-NODE"
                },
                "throughput": 125,
                "volume_id": "vol-05d457c74f1b681ec",
                "volume_size": 24,
                "volume_type": "gp3"
              }
            ],
            "secondary_private_ips": [],
            "security_groups": [],
            "source_dest_check": true,
            "spot_instance_request_id": "",
            "subnet_id": "subnet-0b8d2671904225d00",
            "tags": {
              "Cluster": "test",
              "Component": "test",
              "Name": "test-NGINX-NODE"
            },
            "tags_all": {
              "Cluster": "test",
              "Component": "test",
              "Name": "test-NGINX-NODE"
            },
            "tenancy": "default",
            "timeouts": null,
            "user_data": "9242d4705ece1f20691b760c660dcc58719041c6",
            "user_data_base64": null,
            "user_data_replace_on_change": false,
            "volume_tags": null,
            "vpc_security_group_ids": [
              "sg-0870e41cf21f2e508"
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMCwicmVhZCI6OTAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_availability_zones.available",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_ec2_instance_type_offerings.k8s_instance_types",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_ec2_instance_type_offerings.nginx_instance_types",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_subnets.public_subnets",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_vpc.existing_vpc",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_instance_profile.certbot_profile",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_role.certbot_role",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_security_group.security-group"
          ]
        }
      ]
    },
    {
      "module": "module.mosip_infra.module.aws_infra[0].module.aws_infrastructure.module.aws-resource-creation",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "DNS_RECORDS",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "API_DNS",
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": true,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "api.testgrids.mosip.net",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z090954828SJIEL6P5406_api.testgrids.mosip.net_A",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "api.testgrids.mosip.net",
            "records": [
              "13.201.18.209"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "A",
            "weighted_routing_policy": [],
            "zone_id": "Z090954828SJIEL6P5406"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_availability_zones.available",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_ec2_instance_type_offerings.k8s_instance_types",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_ec2_instance_type_offerings.nginx_instance_types",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_subnets.public_subnets",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_vpc.existing_vpc",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_instance_profile.certbot_profile",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_role.certbot_role",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_instance.NGINX_EC2_INSTANCE",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_security_group.security-group"
          ]
        },
        {
          "index_key": "API_INTERNAL_DNS",
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": true,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "api-internal.testgrids.mosip.net",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z090954828SJIEL6P5406_api-internal.testgrids.mosip.net_A",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "api-internal.testgrids.mosip.net",
            "records": [
              "10.0.2.231"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "A",
            "weighted_routing_policy": [],
            "zone_id": "Z090954828SJIEL6P5406"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_availability_zones.available",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_ec2_instance_type_offerings.k8s_instance_types",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_ec2_instance_type_offerings.nginx_instance_types",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_subnets.public_subnets",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_vpc.existing_vpc",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_instance_profile.certbot_profile",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_role.certbot_role",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_instance.NGINX_EC2_INSTANCE",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_security_group.security-group"
          ]
        },
        {
          "index_key": "activemq",
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": true,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "activemq.testgrids.mosip.net",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z090954828SJIEL6P5406_activemq.testgrids.mosip.net_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "activemq.testgrids.mosip.net",
            "records": [
              "api-internal.testgrids.mosip.net"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z090954828SJIEL6P5406"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_availability_zones.available",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_ec2_instance_type_offerings.k8s_instance_types",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_ec2_instance_type_offerings.nginx_instance_types",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_subnets.public_subnets",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_vpc.existing_vpc",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_instance_profile.certbot_profile",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_role.certbot_role",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_instance.NGINX_EC2_INSTANCE",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_security_group.security-group"
          ]
        },
        {
          "index_key": "admin",
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": true,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "admin.testgrids.mosip.net",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z090954828SJIEL6P5406_admin.testgrids.mosip.net_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "admin.testgrids.mosip.net",
            "records": [
              "api-internal.testgrids.mosip.net"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z090954828SJIEL6P5406"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_availability_zones.available",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_ec2_instance_type_offerings.k8s_instance_types",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_ec2_instance_type_offerings.nginx_instance_types",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_subnets.public_subnets",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_vpc.existing_vpc",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_instance_profile.certbot_profile",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_role.certbot_role",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_instance.NGINX_EC2_INSTANCE",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_security_group.security-group"
          ]
        },
        {
          "index_key": "compliance",
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": true,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "compliance.testgrids.mosip.net",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z090954828SJIEL6P5406_compliance.testgrids.mosip.net_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "compliance.testgrids.mosip.net",
            "records": [
              "api-internal.testgrids.mosip.net"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z090954828SJIEL6P5406"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_availability_zones.available",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_ec2_instance_type_offerings.k8s_instance_types",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_ec2_instance_type_offerings.nginx_instance_types",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_subnets.public_subnets",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_vpc.existing_vpc",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_instance_profile.certbot_profile",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_role.certbot_role",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_instance.NGINX_EC2_INSTANCE",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_security_group.security-group"
          ]
        },
        {
          "index_key": "esignet",
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": true,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "esignet.testgrids.mosip.net",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z090954828SJIEL6P5406_esignet.testgrids.mosip.net_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "esignet.testgrids.mosip.net",
            "records": [
              "api.testgrids.mosip.net"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z090954828SJIEL6P5406"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_availability_zones.available",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_ec2_instance_type_offerings.k8s_instance_types",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_ec2_instance_type_offerings.nginx_instance_types",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_subnets.public_subnets",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_vpc.existing_vpc",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_instance_profile.certbot_profile",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_role.certbot_role",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_instance.NGINX_EC2_INSTANCE",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_security_group.security-group"
          ]
        },
        {
          "index_key": "healthservices",
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": true,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "healthservices.testgrids.mosip.net",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z090954828SJIEL6P5406_healthservices.testgrids.mosip.net_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "healthservices.testgrids.mosip.net",
            "records": [
              "api.testgrids.mosip.net"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z090954828SJIEL6P5406"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_availability_zones.available",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_ec2_instance_type_offerings.k8s_instance_types",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_ec2_instance_type_offerings.nginx_instance_types",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_subnets.public_subnets",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_vpc.existing_vpc",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_instance_profile.certbot_profile",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_role.certbot_role",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_instance.NGINX_EC2_INSTANCE",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_security_group.security-group"
          ]
        },
        {
          "index_key": "iam",
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": true,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "iam.testgrids.mosip.net",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z090954828SJIEL6P5406_iam.testgrids.mosip.net_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "iam.testgrids.mosip.net",
            "records": [
              "api-internal.testgrids.mosip.net"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z090954828SJIEL6P5406"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_availability_zones.available",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_ec2_instance_type_offerings.k8s_instance_types",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_ec2_instance_type_offerings.nginx_instance_types",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_subnets.public_subnets",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_vpc.existing_vpc",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_instance_profile.certbot_profile",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_role.certbot_role",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_instance.NGINX_EC2_INSTANCE",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_security_group.security-group"
          ]
        },
        {
          "index_key": "kafka",
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": true,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "kafka.testgrids.mosip.net",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z090954828SJIEL6P5406_kafka.testgrids.mosip.net_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "kafka.testgrids.mosip.net",
            "records": [
              "api-internal.testgrids.mosip.net"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z090954828SJIEL6P5406"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_availability_zones.available",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_ec2_instance_type_offerings.k8s_instance_types",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_ec2_instance_type_offerings.nginx_instance_types",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_subnets.public_subnets",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_vpc.existing_vpc",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_instance_profile.certbot_profile",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_role.certbot_role",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_instance.NGINX_EC2_INSTANCE",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_security_group.security-group"
          ]
        },
        {
          "index_key": "kibana",
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": true,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "kibana.testgrids.mosip.net",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z090954828SJIEL6P5406_kibana.testgrids.mosip.net_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "kibana.testgrids.mosip.net",
            "records": [
              "api-internal.testgrids.mosip.net"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z090954828SJIEL6P5406"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_availability_zones.available",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_ec2_instance_type_offerings.k8s_instance_types",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_ec2_instance_type_offerings.nginx_instance_types",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_subnets.public_subnets",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_vpc.existing_vpc",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_instance_profile.certbot_profile",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_role.certbot_role",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_instance.NGINX_EC2_INSTANCE",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_security_group.security-group"
          ]
        },
        {
          "index_key": "minio",
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": true,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "minio.testgrids.mosip.net",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z090954828SJIEL6P5406_minio.testgrids.mosip.net_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "minio.testgrids.mosip.net",
            "records": [
              "api-internal.testgrids.mosip.net"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z090954828SJIEL6P5406"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_availability_zones.available",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_ec2_instance_type_offerings.k8s_instance_types",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_ec2_instance_type_offerings.nginx_instance_types",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_subnets.public_subnets",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_vpc.existing_vpc",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_instance_profile.certbot_profile",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_role.certbot_role",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_instance.NGINX_EC2_INSTANCE",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_security_group.security-group"
          ]
        },
        {
          "index_key": "pmp",
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": true,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "pmp.testgrids.mosip.net",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z090954828SJIEL6P5406_pmp.testgrids.mosip.net_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "pmp.testgrids.mosip.net",
            "records": [
              "api-internal.testgrids.mosip.net"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z090954828SJIEL6P5406"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_availability_zones.available",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_ec2_instance_type_offerings.k8s_instance_types",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_ec2_instance_type_offerings.nginx_instance_types",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_subnets.public_subnets",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_vpc.existing_vpc",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_instance_profile.certbot_profile",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_role.certbot_role",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_instance.NGINX_EC2_INSTANCE",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_security_group.security-group"
          ]
        },
        {
          "index_key": "postgres",
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": true,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "postgres.testgrids.mosip.net",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z090954828SJIEL6P5406_postgres.testgrids.mosip.net_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "postgres.testgrids.mosip.net",
            "records": [
              "api-internal.testgrids.mosip.net"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z090954828SJIEL6P5406"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_availability_zones.available",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_ec2_instance_type_offerings.k8s_instance_types",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_ec2_instance_type_offerings.nginx_instance_types",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_subnets.public_subnets",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_vpc.existing_vpc",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_instance_profile.certbot_profile",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_role.certbot_role",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_instance.NGINX_EC2_INSTANCE",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_security_group.security-group"
          ]
        },
        {
          "index_key": "prereg",
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": true,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "prereg.testgrids.mosip.net",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z090954828SJIEL6P5406_prereg.testgrids.mosip.net_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "prereg.testgrids.mosip.net",
            "records": [
              "api.testgrids.mosip.net"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z090954828SJIEL6P5406"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_availability_zones.available",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_ec2_instance_type_offerings.k8s_instance_types",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_ec2_instance_type_offerings.nginx_instance_types",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_subnets.public_subnets",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_vpc.existing_vpc",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_instance_profile.certbot_profile",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_role.certbot_role",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_instance.NGINX_EC2_INSTANCE",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_security_group.security-group"
          ]
        },
        {
          "index_key": "regclient",
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": true,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "regclient.testgrids.mosip.net",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z090954828SJIEL6P5406_regclient.testgrids.mosip.net_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "regclient.testgrids.mosip.net",
            "records": [
              "api-internal.testgrids.mosip.net"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z090954828SJIEL6P5406"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_availability_zones.available",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_ec2_instance_type_offerings.k8s_instance_types",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_ec2_instance_type_offerings.nginx_instance_types",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_subnets.public_subnets",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_vpc.existing_vpc",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_instance_profile.certbot_profile",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_role.certbot_role",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_instance.NGINX_EC2_INSTANCE",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_security_group.security-group"
          ]
        },
        {
          "index_key": "resident",
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": true,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "resident.testgrids.mosip.net",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z090954828SJIEL6P5406_resident.testgrids.mosip.net_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "resident.testgrids.mosip.net",
            "records": [
              "api.testgrids.mosip.net"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z090954828SJIEL6P5406"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_availability_zones.available",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_ec2_instance_type_offerings.k8s_instance_types",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_ec2_instance_type_offerings.nginx_instance_types",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_subnets.public_subnets",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_vpc.existing_vpc",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_instance_profile.certbot_profile",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_role.certbot_role",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_instance.NGINX_EC2_INSTANCE",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_security_group.security-group"
          ]
        },
        {
          "index_key": "signup",
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": true,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "signup.testgrids.mosip.net",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z090954828SJIEL6P5406_signup.testgrids.mosip.net_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "signup.testgrids.mosip.net",
            "records": [
              "api.testgrids.mosip.net"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z090954828SJIEL6P5406"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_availability_zones.available",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_ec2_instance_type_offerings.k8s_instance_types",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_ec2_instance_type_offerings.nginx_instance_types",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_subnets.public_subnets",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_vpc.existing_vpc",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_instance_profile.certbot_profile",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_role.certbot_role",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_instance.NGINX_EC2_INSTANCE",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_security_group.security-group"
          ]
        },
        {
          "index_key": "smtp",
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": true,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "smtp.testgrids.mosip.net",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z090954828SJIEL6P5406_smtp.testgrids.mosip.net_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "smtp.testgrids.mosip.net",
            "records": [
              "api-internal.testgrids.mosip.net"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z090954828SJIEL6P5406"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_availability_zones.available",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_ec2_instance_type_offerings.k8s_instance_types",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_ec2_instance_type_offerings.nginx_instance_types",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_subnets.public_subnets",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_vpc.existing_vpc",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_instance_profile.certbot_profile",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_role.certbot_role",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_instance.NGINX_EC2_INSTANCE",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_security_group.security-group"
          ]
        },
        {
          "index_key": "testgrids.mosip.net",
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": true,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "testgrids.mosip.net",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z090954828SJIEL6P5406_testgrids.mosip.net_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "testgrids.mosip.net",
            "records": [
              "api-internal.testgrids.mosip.net"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z090954828SJIEL6P5406"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_availability_zones.available",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_ec2_instance_type_offerings.k8s_instance_types",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_ec2_instance_type_offerings.nginx_instance_types",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_subnets.public_subnets",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_vpc.existing_vpc",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_instance_profile.certbot_profile",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_role.certbot_role",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_instance.NGINX_EC2_INSTANCE",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_security_group.security-group"
          ]
        }
      ]
    },
    {
      "module": "module.mosip_infra.module.aws_infra[0].module.aws_infrastructure.module.aws-resource-creation",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "security-group",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "K8S_CONTROL_PLANE_SECURITY_GROUP",
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:ap-south-1:931337674770:security-group/sg-0993d87bdd91f5cfe",
            "description": "Rules which allow the outgoing traffic from the instances associated with the security group K8S_CONTROL_PLANE_SECURITY_GROUP",
            "egress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Allow DNS TCP outbound to anywhere (for public DNS resolution)",
                "from_port": 53,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 53
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Allow DNS UDP outbound to anywhere (for public DNS resolution)",
                "from_port": 53,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "udp",
                "security_groups": [],
                "self": false,
                "to_port": 53
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Allow HTTP outbound to anywhere (for package downloads)",
                "from_port": 80,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 80
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Allow HTTPS outbound to anywhere",
                "from_port": 443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 443
              },
              {
                "cidr_blocks": [
                  "10.0.0.0/16"
                ],
                "description": "Allow all required internal communication to VPC CIDR",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              },
              {
                "cidr_blocks": [
                  "10.13.13.0/24"
                ],
                "description": "Allow WireGuard VPN outbound to VPN CIDR",
                "from_port": 51820,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "udp",
                "security_groups": [],
                "self": false,
                "to_port": 51820
              }
            ],
            "id": "sg-0993d87bdd91f5cfe",
            "ingress": [
              {
                "cidr_blocks": [
                  "10.0.0.0/16",
                  "10.13.13.0/24"
                ],
                "description": "Allow ICMP within VPC CIDR and WireGuard CIDR",
                "from_port": -1,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "icmp",
                "security_groups": [],
                "self": false,
                "to_port": -1
              },
              {
                "cidr_blocks": [
                  "10.0.0.0/16",
                  "10.13.13.0/24"
                ],
                "description": "SSH login port (restricted to VPC CIDR and WireGuard CIDR)",
                "from_port": 22,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 22
              },
              {
                "cidr_blocks": [
                  "10.0.0.0/16"
                ],
                "description": "Canal CNI health checks (internal only)",
                "from_port": 9099,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 9099
              },
              {
                "cidr_blocks": [
                  "10.0.0.0/16"
                ],
                "description": "Canal CNI with VXLAN (internal only)",
                "from_port": 8472,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "udp",
                "security_groups": [],
                "self": false,
                "to_port": 8472
              },
              {
                "cidr_blocks": [
                  "10.0.0.0/16"
                ],
                "description": "ETCD client port (internal only)",
                "from_port": 2379,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 2379
              },
              {
                "cidr_blocks": [
                  "10.0.0.0/16"
                ],
                "description": "ETCD metrics port (internal only)",
                "from_port": 2381,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 2381
              },
              {
                "cidr_blocks": [
                  "10.0.0.0/16"
                ],
                "description": "ETCD peer port (internal only)",
                "from_port": 2380,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 2380
              },
              {
                "cidr_blocks": [
                  "10.0.0.0/16"
                ],
                "description": "Kubelet metrics (internal only)",
                "from_port": 10250,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 10250
              },
              {
                "cidr_blocks": [
                  "10.0.0.0/16"
                ],
                "description": "Kubernetes API (internal only)",
                "from_port": 6443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 6443
              },
              {
                "cidr_blocks": [
                  "10.0.0.0/16"
                ],
                "description": "NodePort port range (internal only)",
                "from_port": 30000,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 32767
              },
              {
                "cidr_blocks": [
                  "10.0.0.0/16"
                ],
                "description": "RKE2 supervisor API (internal only)",
                "from_port": 9345,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 9345
              }
            ],
            "name": "terraform-20250826204545116700000002",
            "name_prefix": "terraform-",
            "owner_id": "931337674770",
            "revoke_rules_on_delete": false,
            "tags": {
              "Cluster": "test",
              "Component": "test",
              "Name": "test-K8S_CONTROL_PLANE_SECURITY_GROUP"
            },
            "tags_all": {
              "Cluster": "test",
              "Component": "test",
              "Name": "test-K8S_CONTROL_PLANE_SECURITY_GROUP"
            },
            "timeouts": null,
            "vpc_id": "vpc-034f89e7c01cabf74"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_vpc.existing_vpc"
          ]
        },
        {
          "index_key": "K8S_ETCD_SECURITY_GROUP",
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:ap-south-1:931337674770:security-group/sg-09d14f91f0fdd511c",
            "description": "Rules which allow the outgoing traffic from the instances associated with the security group K8S_ETCD_SECURITY_GROUP",
            "egress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Allow DNS TCP outbound to anywhere (for public DNS resolution)",
                "from_port": 53,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 53
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Allow DNS UDP outbound to anywhere (for public DNS resolution)",
                "from_port": 53,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "udp",
                "security_groups": [],
                "self": false,
                "to_port": 53
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Allow HTTP outbound to anywhere (for package downloads)",
                "from_port": 80,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 80
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Allow HTTPS outbound to anywhere",
                "from_port": 443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 443
              },
              {
                "cidr_blocks": [
                  "10.0.0.0/16"
                ],
                "description": "Allow all required internal communication to VPC CIDR",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              },
              {
                "cidr_blocks": [
                  "10.13.13.0/24"
                ],
                "description": "Allow WireGuard VPN outbound to VPN CIDR",
                "from_port": 51820,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "udp",
                "security_groups": [],
                "self": false,
                "to_port": 51820
              }
            ],
            "id": "sg-09d14f91f0fdd511c",
            "ingress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Canal CNI health checks",
                "from_port": 9099,
                "ipv6_cidr_blocks": [
                  "::/0"
                ],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 9099
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Canal CNI with VXLAN",
                "from_port": 8472,
                "ipv6_cidr_blocks": [
                  "::/0"
                ],
                "prefix_list_ids": [],
                "protocol": "udp",
                "security_groups": [],
                "self": false,
                "to_port": 8472
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "ETCD client port",
                "from_port": 2379,
                "ipv6_cidr_blocks": [
                  "::/0"
                ],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 2379
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "ETCD metrics port",
                "from_port": 2381,
                "ipv6_cidr_blocks": [
                  "::/0"
                ],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 2381
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "ETCD peer port",
                "from_port": 2380,
                "ipv6_cidr_blocks": [
                  "::/0"
                ],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 2380
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Kubelet metrics",
                "from_port": 10250,
                "ipv6_cidr_blocks": [
                  "::/0"
                ],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 10250
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "NodePort port range",
                "from_port": 30000,
                "ipv6_cidr_blocks": [
                  "::/0"
                ],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 32767
              },
              {
                "cidr_blocks": [
                  "10.0.0.0/16",
                  "10.13.13.0/24"
                ],
                "description": "Allow ICMP within VPC CIDR and WireGuard CIDR",
                "from_port": -1,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "icmp",
                "security_groups": [],
                "self": false,
                "to_port": -1
              },
              {
                "cidr_blocks": [
                  "10.0.0.0/16",
                  "10.13.13.0/24"
                ],
                "description": "SSH login port (restricted to VPC CIDR and WireGuard CIDR)",
                "from_port": 22,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 22
              }
            ],
            "name": "terraform-20250826204545118000000003",
            "name_prefix": "terraform-",
            "owner_id": "931337674770",
            "revoke_rules_on_delete": false,
            "tags": {
              "Cluster": "test",
              "Component": "test",
              "Name": "test-K8S_ETCD_SECURITY_GROUP"
            },
            "tags_all": {
              "Cluster": "test",
              "Component": "test",
              "Name": "test-K8S_ETCD_SECURITY_GROUP"
            },
            "timeouts": null,
            "vpc_id": "vpc-034f89e7c01cabf74"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_vpc.existing_vpc"
          ]
        },
        {
          "index_key": "K8S_WORKER_SECURITY_GROUP",
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:ap-south-1:931337674770:security-group/sg-00ebf5408d0e5cbf1",
            "description": "Rules which allow the outgoing traffic from the instances associated with the security group K8S_WORKER_SECURITY_GROUP",
            "egress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Allow DNS TCP outbound to anywhere (for public DNS resolution)",
                "from_port": 53,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 53
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Allow DNS UDP outbound to anywhere (for public DNS resolution)",
                "from_port": 53,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "udp",
                "security_groups": [],
                "self": false,
                "to_port": 53
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Allow HTTP outbound to anywhere (for package downloads)",
                "from_port": 80,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 80
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Allow HTTPS outbound to anywhere",
                "from_port": 443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 443
              },
              {
                "cidr_blocks": [
                  "10.0.0.0/16"
                ],
                "description": "Allow all required internal communication to VPC CIDR",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              },
              {
                "cidr_blocks": [
                  "10.13.13.0/24"
                ],
                "description": "Allow WireGuard VPN outbound to VPN CIDR",
                "from_port": 51820,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "udp",
                "security_groups": [],
                "self": false,
                "to_port": 51820
              }
            ],
            "id": "sg-00ebf5408d0e5cbf1",
            "ingress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Canal CNI health checks",
                "from_port": 9099,
                "ipv6_cidr_blocks": [
                  "::/0"
                ],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 9099
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Canal CNI with VXLAN",
                "from_port": 8472,
                "ipv6_cidr_blocks": [
                  "::/0"
                ],
                "prefix_list_ids": [],
                "protocol": "udp",
                "security_groups": [],
                "self": false,
                "to_port": 8472
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Kubelet metrics",
                "from_port": 10250,
                "ipv6_cidr_blocks": [
                  "::/0"
                ],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 10250
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "NodePort port range",
                "from_port": 30000,
                "ipv6_cidr_blocks": [
                  "::/0"
                ],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 32767
              },
              {
                "cidr_blocks": [
                  "10.0.0.0/16",
                  "10.13.13.0/24"
                ],
                "description": "Allow ICMP within VPC CIDR and WireGuard CIDR",
                "from_port": -1,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "icmp",
                "security_groups": [],
                "self": false,
                "to_port": -1
              },
              {
                "cidr_blocks": [
                  "10.0.0.0/16",
                  "10.13.13.0/24"
                ],
                "description": "SSH login port (restricted to VPC CIDR and WireGuard CIDR)",
                "from_port": 22,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 22
              }
            ],
            "name": "terraform-20250826204545098600000001",
            "name_prefix": "terraform-",
            "owner_id": "931337674770",
            "revoke_rules_on_delete": false,
            "tags": {
              "Cluster": "test",
              "Component": "test",
              "Name": "test-K8S_WORKER_SECURITY_GROUP"
            },
            "tags_all": {
              "Cluster": "test",
              "Component": "test",
              "Name": "test-K8S_WORKER_SECURITY_GROUP"
            },
            "timeouts": null,
            "vpc_id": "vpc-034f89e7c01cabf74"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_vpc.existing_vpc"
          ]
        },
        {
          "index_key": "NGINX_SECURITY_GROUP",
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:ap-south-1:931337674770:security-group/sg-0870e41cf21f2e508",
            "description": "Rules which allow the outgoing traffic from the instances associated with the security group NGINX_SECURITY_GROUP",
            "egress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Allow DNS TCP outbound to anywhere (for public DNS resolution)",
                "from_port": 53,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 53
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Allow DNS UDP outbound to anywhere (for public DNS resolution)",
                "from_port": 53,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "udp",
                "security_groups": [],
                "self": false,
                "to_port": 53
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Allow HTTP outbound to anywhere (for package downloads)",
                "from_port": 80,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 80
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Allow HTTPS outbound to anywhere",
                "from_port": 443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 443
              },
              {
                "cidr_blocks": [
                  "10.0.0.0/16"
                ],
                "description": "Allow all required internal communication to VPC CIDR",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              },
              {
                "cidr_blocks": [
                  "10.13.13.0/24"
                ],
                "description": "Allow WireGuard VPN outbound to VPN CIDR",
                "from_port": 51820,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "udp",
                "security_groups": [],
                "self": false,
                "to_port": 51820
              }
            ],
            "id": "sg-0870e41cf21f2e508",
            "ingress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "HTTP port (public)",
                "from_port": 80,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 80
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "HTTPS port (public)",
                "from_port": 443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 443
              },
              {
                "cidr_blocks": [
                  "10.0.0.0/16",
                  "10.13.13.0/24",
                  "0.0.0.0/0"
                ],
                "description": "SSH login port (temporary external access for deployment)",
                "from_port": 22,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 22
              },
              {
                "cidr_blocks": [
                  "10.0.0.0/16",
                  "10.13.13.0/24"
                ],
                "description": "Allow ICMP within VPC CIDR and WireGuard CIDR",
                "from_port": -1,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "icmp",
                "security_groups": [],
                "self": false,
                "to_port": -1
              },
              {
                "cidr_blocks": [
                  "10.0.0.0/16"
                ],
                "description": "ActiveMQ port (internal only)",
                "from_port": 61616,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 61616
              },
              {
                "cidr_blocks": [
                  "10.0.0.0/16"
                ],
                "description": "Minio console port (internal only)",
                "from_port": 9000,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 9000
              },
              {
                "cidr_blocks": [
                  "10.0.0.0/16"
                ],
                "description": "NFS server port tcp (internal only)",
                "from_port": 2049,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 2049
              },
              {
                "cidr_blocks": [
                  "10.0.0.0/16"
                ],
                "description": "NFS server port udp (internal only)",
                "from_port": 2049,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "udp",
                "security_groups": [],
                "self": false,
                "to_port": 2049
              },
              {
                "cidr_blocks": [
                  "10.0.0.0/16"
                ],
                "description": "Postgres alternative port (internal only)",
                "from_port": 5433,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 5433
              },
              {
                "cidr_blocks": [
                  "10.0.0.0/16"
                ],
                "description": "Postgres port (internal only)",
                "from_port": 5432,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 5432
              }
            ],
            "name": "terraform-20250826204545118900000004",
            "name_prefix": "terraform-",
            "owner_id": "931337674770",
            "revoke_rules_on_delete": false,
            "tags": {
              "Cluster": "test",
              "Component": "test",
              "Name": "test-NGINX_SECURITY_GROUP"
            },
            "tags_all": {
              "Cluster": "test",
              "Component": "test",
              "Name": "test-NGINX_SECURITY_GROUP"
            },
            "timeouts": null,
            "vpc_id": "vpc-034f89e7c01cabf74"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_vpc.existing_vpc"
          ]
        }
      ]
    },
    {
      "module": "module.mosip_infra.module.aws_infra[0].module.aws_infrastructure.module.nfs-setup",
      "mode": "managed",
      "type": "null_resource",
      "name": "nfs-csi-setup",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "status": "tainted",
          "schema_version": 0,
          "attributes": {
            "id": "4217450975161751625",
            "triggers": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_availability_zones.available",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_ec2_instance_type_offerings.k8s_instance_types",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_ec2_instance_type_offerings.nginx_instance_types",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_subnets.private_subnets",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_subnets.public_subnets",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_vpc.existing_vpc",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_instance_profile.certbot_profile",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_policy.certbot_policy",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_role.certbot_role",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_role_policy_attachment.certbot_policy_attachment",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_instance.K8S_CLUSTER_EC2_INSTANCE",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_instance.NGINX_EC2_INSTANCE",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_route53_record.DNS_RECORDS",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_security_group.security-group",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.nfs-setup.null_resource.nfs-server-setup",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.rke2-setup.null_resource.download-k8s-kubeconfig",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.rke2-setup.null_resource.download-kubectl-file",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.rke2-setup.null_resource.rancher-import",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.rke2-setup.null_resource.rke2-cloud-init-wait",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.rke2-setup.null_resource.rke2-cluster-setup",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.rke2-setup.null_resource.rke2-primary-cluster-setup",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.rke2-setup.random_string.K8S_TOKEN"
          ]
        }
      ]
    },
    {
      "module": "module.mosip_infra.module.aws_infra[0].module.aws_infrastructure.module.nfs-setup",
      "mode": "managed",
      "type": "null_resource",
      "name": "nfs-server-setup",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "6017821766921678703",
            "triggers": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_availability_zones.available",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_ec2_instance_type_offerings.k8s_instance_types",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_ec2_instance_type_offerings.nginx_instance_types",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_subnets.private_subnets",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_subnets.public_subnets",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_vpc.existing_vpc",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_instance_profile.certbot_profile",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_policy.certbot_policy",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_role.certbot_role",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_role_policy_attachment.certbot_policy_attachment",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_instance.K8S_CLUSTER_EC2_INSTANCE",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_instance.NGINX_EC2_INSTANCE",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_route53_record.DNS_RECORDS",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_security_group.security-group",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.rke2-setup.null_resource.download-k8s-kubeconfig",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.rke2-setup.null_resource.download-kubectl-file",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.rke2-setup.null_resource.rancher-import",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.rke2-setup.null_resource.rke2-cloud-init-wait",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.rke2-setup.null_resource.rke2-cluster-setup",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.rke2-setup.null_resource.rke2-primary-cluster-setup",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.rke2-setup.random_string.K8S_TOKEN"
          ]
        }
      ]
    },
    {
      "module": "module.mosip_infra.module.aws_infra[0].module.aws_infrastructure.module.nginx-setup",
      "mode": "managed",
      "type": "null_resource",
      "name": "Nginx-setup",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "3048777345896112041",
            "triggers": {}
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_availability_zones.available",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_ec2_instance_type_offerings.k8s_instance_types",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_ec2_instance_type_offerings.nginx_instance_types",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_subnets.private_subnets",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_subnets.public_subnets",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_vpc.existing_vpc",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_instance_profile.certbot_profile",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_policy.certbot_policy",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_role.certbot_role",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_role_policy_attachment.certbot_policy_attachment",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_instance.K8S_CLUSTER_EC2_INSTANCE",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_instance.NGINX_EC2_INSTANCE",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_route53_record.DNS_RECORDS",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_security_group.security-group"
          ]
        }
      ]
    },
    {
      "module": "module.mosip_infra.module.aws_infra[0].module.aws_infrastructure.module.rke2-setup",
      "mode": "managed",
      "type": "null_resource",
      "name": "download-k8s-kubeconfig",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "index_key": "test-CONTROL-PLANE-NODE-1",
          "schema_version": 0,
          "attributes": {
            "id": "7104771877402969273",
            "triggers": {
              "node_hash": "02341647ebb4e68cca080a177bab6854"
            }
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_availability_zones.available",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_ec2_instance_type_offerings.k8s_instance_types",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_ec2_instance_type_offerings.nginx_instance_types",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_subnets.private_subnets",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_subnets.public_subnets",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_vpc.existing_vpc",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_instance_profile.certbot_profile",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_policy.certbot_policy",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_role.certbot_role",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_role_policy_attachment.certbot_policy_attachment",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_instance.K8S_CLUSTER_EC2_INSTANCE",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_instance.NGINX_EC2_INSTANCE",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_route53_record.DNS_RECORDS",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_security_group.security-group",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.rke2-setup.null_resource.rke2-cloud-init-wait",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.rke2-setup.null_resource.rke2-cluster-setup",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.rke2-setup.null_resource.rke2-primary-cluster-setup",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.rke2-setup.random_string.K8S_TOKEN"
          ]
        }
      ]
    },
    {
      "module": "module.mosip_infra.module.aws_infra[0].module.aws_infrastructure.module.rke2-setup",
      "mode": "managed",
      "type": "null_resource",
      "name": "download-kubectl-file",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "1957006963213586291",
            "triggers": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_availability_zones.available",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_ec2_instance_type_offerings.k8s_instance_types",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_ec2_instance_type_offerings.nginx_instance_types",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_subnets.private_subnets",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_subnets.public_subnets",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_vpc.existing_vpc",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_instance_profile.certbot_profile",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_policy.certbot_policy",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_role.certbot_role",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_role_policy_attachment.certbot_policy_attachment",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_instance.K8S_CLUSTER_EC2_INSTANCE",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_instance.NGINX_EC2_INSTANCE",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_route53_record.DNS_RECORDS",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_security_group.security-group",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.rke2-setup.null_resource.rke2-cloud-init-wait",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.rke2-setup.null_resource.rke2-cluster-setup",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.rke2-setup.null_resource.rke2-primary-cluster-setup",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.rke2-setup.random_string.K8S_TOKEN"
          ]
        }
      ]
    },
    {
      "module": "module.mosip_infra.module.aws_infra[0].module.aws_infrastructure.module.rke2-setup",
      "mode": "managed",
      "type": "null_resource",
      "name": "rke2-cloud-init-wait",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "8530119969610062310",
            "triggers": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_availability_zones.available",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_ec2_instance_type_offerings.k8s_instance_types",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_ec2_instance_type_offerings.nginx_instance_types",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_subnets.private_subnets",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_subnets.public_subnets",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_vpc.existing_vpc",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_instance_profile.certbot_profile",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_policy.certbot_policy",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_role.certbot_role",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_role_policy_attachment.certbot_policy_attachment",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_instance.K8S_CLUSTER_EC2_INSTANCE",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_instance.NGINX_EC2_INSTANCE",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_route53_record.DNS_RECORDS",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_security_group.security-group"
          ]
        }
      ]
    },
    {
      "module": "module.mosip_infra.module.aws_infra[0].module.aws_infrastructure.module.rke2-setup",
      "mode": "managed",
      "type": "null_resource",
      "name": "rke2-cluster-setup",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "index_key": "test-CONTROL-PLANE-NODE-1",
          "schema_version": 0,
          "attributes": {
            "id": "8463708683750506419",
            "triggers": {
              "node_hash": "02341647ebb4e68cca080a177bab6854",
              "script_hash": "9db70909ec1842460fe0b8875540a8c3"
            }
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_availability_zones.available",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_ec2_instance_type_offerings.k8s_instance_types",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_ec2_instance_type_offerings.nginx_instance_types",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_subnets.private_subnets",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_subnets.public_subnets",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_vpc.existing_vpc",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_instance_profile.certbot_profile",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_policy.certbot_policy",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_role.certbot_role",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_role_policy_attachment.certbot_policy_attachment",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_instance.K8S_CLUSTER_EC2_INSTANCE",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_instance.NGINX_EC2_INSTANCE",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_route53_record.DNS_RECORDS",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_security_group.security-group",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.rke2-setup.null_resource.rke2-primary-cluster-setup",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.rke2-setup.random_string.K8S_TOKEN"
          ]
        }
      ]
    },
    {
      "module": "module.mosip_infra.module.aws_infra[0].module.aws_infrastructure.module.rke2-setup",
      "mode": "managed",
      "type": "null_resource",
      "name": "rke2-primary-cluster-setup",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": []
    },
    {
      "module": "module.mosip_infra.module.aws_infra[0].module.aws_infrastructure.module.rke2-setup",
      "mode": "managed",
      "type": "random_string",
      "name": "K8S_TOKEN",
      "provider": "provider[\"registry.terraform.io/hashicorp/random\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "id": "yGit9DEePGCR5PB9359MxV5QppKoUcLU",
            "keepers": null,
            "length": 32,
            "lower": true,
            "min_lower": 0,
            "min_numeric": 0,
            "min_special": 0,
            "min_upper": 0,
            "number": true,
            "numeric": true,
            "override_special": null,
            "result": "yGit9DEePGCR5PB9359MxV5QppKoUcLU",
            "special": false,
            "upper": true
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_availability_zones.available",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_ec2_instance_type_offerings.k8s_instance_types",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_ec2_instance_type_offerings.nginx_instance_types",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_subnets.private_subnets",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_subnets.public_subnets",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.data.aws_vpc.existing_vpc",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_instance_profile.certbot_profile",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_policy.certbot_policy",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_role.certbot_role",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_iam_role_policy_attachment.certbot_policy_attachment",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_instance.K8S_CLUSTER_EC2_INSTANCE",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_instance.NGINX_EC2_INSTANCE",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_route53_record.DNS_RECORDS",
            "module.mosip_infra.module.aws_infra.module.aws_infrastructure.module.aws-resource-creation.aws_security_group.security-group"
          ]
        }
      ]
    }
  ],
  "check_results": null
}
